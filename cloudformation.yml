AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for MillBrook Pizza static website with S3 and CloudFront'

Parameters:
  DomainName:
    Type: String
    Description: The domain name for the website (e.g., millbrookpizza.com)
    Default: millbrookpizza.com
  
  AcmCertificateArn:
    Type: String
    Description: ARN of the ACM certificate for HTTPS
    Default: ''
    # Note: For production, remove the default and make this a required parameter

Resources:
  # S3 bucket for website content
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref DomainName
      # Removed AccessControl: Private as it's deprecated in newer S3 API
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html

  # Bucket policy to allow CloudFront access - fixed circular dependency issue
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn: CloudFrontDistribution
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub '${WebsiteBucket.Arn}/*'
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}'

  # CloudFront Origin Access Control - moved before CloudFront to fix reference
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${AWS::StackName}-OAC'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # CloudFront distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: CloudFrontOriginAccessControl
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
          - !Ref DomainName
          - !Sub 'www.${DomainName}'
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt WebsiteBucket.RegionalDomainName
            S3OriginConfig:
              # This parameter is required when using OAC
              OriginAccessIdentity: ''
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 86400  # 1 day
          MinTTL: 0
          MaxTTL: 31536000  # 1 year
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
        # Conditional for handling empty certificate ARN
        ViewerCertificate: !If
          - HasCertificate
          - AcmCertificateArn: !Ref AcmCertificateArn
            SslSupportMethod: sni-only
            MinimumProtocolVersion: TLSv1.2_2021
          - CloudFrontDefaultCertificate: true
        HttpVersion: http2
        PriceClass: PriceClass_100
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html

Conditions:
  # Define condition for certificate ARN
  HasCertificate: !Not [!Equals [!Ref AcmCertificateArn, '']]

Outputs:
  WebsiteBucketName:
    Description: Name of the S3 bucket storing the website files
    Value: !Ref WebsiteBucket

  CloudFrontDistributionId:
    Description: ID of the CloudFront distribution
    Value: !Ref CloudFrontDistribution

  CloudFrontDomainName:
    Description: Domain name of the CloudFront distribution
    Value: !GetAtt CloudFrontDistribution.DomainName

  WebsiteURL:
    Description: URL of the website
    Value: !Sub 'https://${DomainName}'